# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: D

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout Submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Configure Windows x64 CMake for Deps Build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/deps/build_x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -Ax64 ${{github.workspace}}/deps

    - name: Build Windows x64 CMake
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/deps/build_x64 --config ${{env.BUILD_TYPE}}
      
    - name: Configure Windows x86 CMake for Deps Build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/deps/build_x86 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -AWin32 ${{github.workspace}}/deps

    - name: Build Windows x86 CMake
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/deps/build_x86 --config ${{env.BUILD_TYPE}}

    - uses: dlang-community/setup-dlang@4c99aa991ce7d19dd3064de0a4f2f6b2f152e2d7

    - name: 'Build D Code'
      run: |
        # Build the project, with its main file included, without unittests
        dub build
        # Build and run tests, as defined by `unittest` configuration
        # In this mode, `mainSourceFile` is excluded and `version (unittest)` are included
        # See https://dub.pm/package-format-json.html#configurations
        # dub test --compiler=$DC
